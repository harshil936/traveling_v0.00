import * as breeze from 'breeze-client';
/** @hidden */
export declare class DataServiceODataAdapter extends breeze.AbstractDataServiceAdapter {
    name: string;
    relativeUrl: boolean | ((ds: breeze.DataService, url: string) => string);
    headers: {
        "DataServiceVersion": string;
    };
    constructor();
    static register(config?: breeze.BreezeConfig): DataServiceODataAdapter;
    initialize(): void;
    fetchMetadata(metadataStore: breeze.MetadataStore, dataService: breeze.DataService): Promise<unknown>;
    executeQuery(mappingContext: breeze.MappingContext): Promise<breeze.QueryResult>;
    saveChanges(odataSaveContext: breeze.SaveContext, saveBundle: breeze.SaveBundle): Promise<breeze.SaveResult>;
    jsonResultsAdapter: breeze.JsonResultsAdapter;
    getAbsoluteUrl(dataService: breeze.DataService, url: string): string;
    getRoutePrefix(dataService: breeze.DataService): any;
}
