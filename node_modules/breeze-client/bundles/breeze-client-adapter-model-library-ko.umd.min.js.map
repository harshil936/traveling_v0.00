{"version":3,"sources":["ng://breeze-client/adapter-model-library-ko/adapter-model-library-ko.ts"],"names":["ko","core","breeze.core","canIsolateES5Props","isES5Supported","ModelLibraryKnockoutAdapter","this","name","register","config","breeze.config","registerAdapter","initializeAdapterInstance","prototype","initialize","requireLib","extenders","intercept","target","interceptorOptions","instance","property","splice","computed","read","write","newValue","_$interceptor","getTrackablePropertyNames","entity","names","p","propDescr","getES5PropDescriptor","get","push","val","isObservable","isFunction","initializeEntityPrototype","proto","getProperty","propertyName","setProperty","value","stype","entityType","complexType","es5Descriptors","getProperties","forEach","prop","isEmpty","_extra","_koDummy","observable","isolateES5Props","startTracking","sort","p1","p2","isUnmapped","koObj","propName","getFn_1","bind","set","setFn_1","rawAccessorFn_1","arguments","length","valueHasMutated","isNavigationProperty","Error","breeze.DataProperty","isComplexProperty","isScalar","dataType","_createInstanceCore","breeze.makeComplexArray","undefined","defaultValue","breeze.makePrimitiveArray","breeze.NavigationProperty","breeze.makeRelationArray","initializeValueForProp","observableArray","Object","defineProperty","enumerable","configurable","writable","koExt","extend","_koObj","subscribe","onBeforeChange","arrayChanged","onArrayChanged","equalityComparer","hasOwnProperty","getOwnPropertyDescriptor","nextProto","getPrototypeOf","args","_suppressBreeze","array"],"mappings":"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","sourcesContent":["import * as breeze from 'breeze-client';\r\n\r\nlet core = breeze.core;\r\n\r\nlet canIsolateES5Props = core.isES5Supported;\r\nlet ko: any;\r\n\r\nexport class ModelLibraryKnockoutAdapter implements breeze.ModelLibraryAdapter {\r\n  name: string;\r\n  constructor() {\r\n    this.name = \"ko\";\r\n  }\r\n\r\n  static register(config?: breeze.BreezeConfig) {\r\n    config = config || breeze.config;\r\n    config.registerAdapter(\"modelLibrary\", ModelLibraryKnockoutAdapter);\r\n    return config.initializeAdapterInstance(\"modelLibrary\", \"ko\", true) as ModelLibraryKnockoutAdapter;\r\n  }\r\n\r\n  initialize() {\r\n    ko = core.requireLib(\"ko;knockout\", \"The Knockout library\");\r\n    ko.extenders.intercept = function (target: any, interceptorOptions: any) {\r\n      let instance = interceptorOptions.instance;\r\n      let property = interceptorOptions.property;\r\n\r\n      // create a computed observable to intercept writes to our observable\r\n      let result: any;\r\n      if (target.splice) {\r\n        result = ko.computed({\r\n          read: target  //always return the original observables value\r\n        });\r\n      } else {\r\n        result = ko.computed({\r\n          read: target,  //always return the original observables value\r\n          write: function (newValue: any) {\r\n            instance._$interceptor(property, newValue, target);\r\n            return instance;\r\n          }\r\n        });\r\n      }\r\n      //return the new computed observable\r\n      return result;\r\n    };\r\n\r\n  }\r\n\r\n  getTrackablePropertyNames(entity: any) {\r\n    let names: string[] = [];\r\n    for (let p in entity) {\r\n      if (p === \"entityType\") continue;\r\n      if (p === \"_$typeName\") continue;\r\n\r\n      let propDescr = getES5PropDescriptor(entity, p);\r\n      if (propDescr && propDescr.get) {\r\n        names.push(p);\r\n      } else {\r\n        let val = entity[p];\r\n        if (ko.isObservable(val)) {\r\n          names.push(p);\r\n        } else if (!core.isFunction(val)) {\r\n          names.push(p);\r\n        }\r\n      }\r\n    }\r\n    return names;\r\n  }\r\n\r\n  initializeEntityPrototype(proto: any) {\r\n\r\n    proto.getProperty = function (propertyName: string) {\r\n      return this[propertyName]();\r\n    };\r\n\r\n    proto.setProperty = function (propertyName: string, value: any) {\r\n      this[propertyName](value);\r\n      // allow set property chaining.\r\n      return this;\r\n    };\r\n\r\n    if (canIsolateES5Props) {\r\n      isolateES5Props(proto);\r\n    }\r\n\r\n  }\r\n\r\n  startTracking(entity: any, proto: any) {\r\n    // create ko's for each property and assign defaultValues\r\n\r\n    let stype = (entity.entityType || entity.complexType) as breeze.StructuralType;\r\n    let es5Descriptors = stype._extra.es5Descriptors || {};\r\n\r\n    // sort unmapped properties to the end\r\n    stype.getProperties().sort(function (p1, p2) {\r\n      let v1 = p1.isUnmapped ? 1 : 0;\r\n      let v2 = p2.isUnmapped ? 1 : 0;\r\n      return v1 - v2;\r\n    }).forEach(function (prop) {\r\n      let propName = prop.name;\r\n      let val = entity[propName];\r\n      let propDescr = es5Descriptors[propName];\r\n      let koObj: any;\r\n\r\n      // check if property is an ES5 property\r\n      if (propDescr) {\r\n        let getFn = propDescr.get.bind(entity);\r\n        if (propDescr.set) {\r\n          let setFn = propDescr.set.bind(entity);\r\n          let rawAccessorFn = function (newValue: any) {\r\n            if (arguments.length === 0) {\r\n              getFn();\r\n              return;\r\n            } else {\r\n              setFn(newValue);\r\n            }\r\n          };\r\n          koObj = ko.computed({\r\n            read: function () {\r\n              (stype as any)._koDummy();\r\n              return getFn();\r\n            },\r\n            write: function (newValue: any) {\r\n              entity._$interceptor(prop, newValue, rawAccessorFn);\r\n              (stype as any)._koDummy.valueHasMutated();\r\n              return entity;\r\n            }\r\n          });\r\n        } else {\r\n          koObj = ko.computed({\r\n            read: getFn,\r\n            write: function () {\r\n            }\r\n\r\n          });\r\n        }\r\n        // check if property is already exposed as a ko object\r\n      } else if (ko.isObservable(val)) {\r\n        if (prop.isNavigationProperty) {\r\n          throw new Error(\"Cannot assign a navigation property in an entity ctor.: \" + propName);\r\n        }\r\n        koObj = val;\r\n        // otherwise\r\n      } else {\r\n        val = initializeValueForProp(entity, prop, val);\r\n        koObj = prop.isScalar ? ko.observable(val) : ko.observableArray(val);\r\n      }\r\n\r\n\r\n      if (prop.isScalar) {\r\n        if (propDescr) {\r\n          Object.defineProperty(entity, propName, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: koObj\r\n          });\r\n        } else {\r\n          let koExt = koObj.extend({ intercept: { instance: entity, property: prop } });\r\n          entity[propName] = koExt;\r\n        }\r\n      } else {\r\n        val._koObj = koObj;\r\n        // code to suppress extra breeze notification when\r\n        // ko's array methods are called.\r\n        koObj.subscribe(onBeforeChange, null, \"beforeChange\");\r\n        // code to insure that any direct breeze changes notify ko\r\n        val.arrayChanged.subscribe(onArrayChanged);\r\n\r\n        koObj.equalityComparer = function () {\r\n          throw new Error(\"Collection navigation properties may NOT be set.\");\r\n        };\r\n        entity[propName] = koObj;\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nbreeze.config.registerAdapter(\"modelLibrary\", ModelLibraryKnockoutAdapter);\r\n\r\n\r\n// private fns\r\n\r\nfunction getES5PropDescriptor(proto: any, propName: string): any {\r\n  if (!canIsolateES5Props) {\r\n    return null;\r\n  }\r\n  if (proto.hasOwnProperty(propName)) {\r\n    return Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(proto, propName);\r\n  } else {\r\n    let nextProto = Object.getPrototypeOf(proto);\r\n    return nextProto ? getES5PropDescriptor(nextProto, propName) : null;\r\n  }\r\n}\r\n\r\nfunction initializeValueForProp(entity: any, prop: breeze.EntityProperty, val: any) {\r\n  if (prop instanceof breeze.DataProperty) {\r\n    if (prop.isComplexProperty) {\r\n      // TODO: right now we create Empty complexObjects here - these should actually come from the entity\r\n      if (prop.isScalar) {\r\n        val = (prop.dataType as breeze.ComplexType)._createInstanceCore(entity, prop);\r\n      } else {\r\n        val = breeze.makeComplexArray([], entity, prop);\r\n      }\r\n    } else if (!prop.isScalar) {\r\n      val = breeze.makePrimitiveArray([], entity, prop);\r\n    } else if (val === undefined) {\r\n      val = prop.defaultValue;\r\n    }\r\n\r\n  } else if (prop instanceof breeze.NavigationProperty) {\r\n    if (val !== undefined) {\r\n      throw new Error(\"Cannot assign a navigation property in an entity ctor.: \" + prop.name);\r\n    }\r\n    if (prop.isScalar) {\r\n      // TODO: change this to nullEntity later.\r\n      val = null;\r\n    } else {\r\n      val = breeze.makeRelationArray([], entity, prop);\r\n    }\r\n  } else {\r\n    throw new Error(\"unknown property: \" + (prop as any).name);\r\n  }\r\n  return val;\r\n}\r\n\r\n\r\nfunction onBeforeChange(args: any) {\r\n  args._koObj._suppressBreeze = true;\r\n}\r\n\r\nfunction onArrayChanged(args: any) {\r\n  let koObj = args.array._koObj;\r\n  if (koObj._suppressBreeze) {\r\n    koObj._suppressBreeze = false;\r\n  } else {\r\n    koObj.valueHasMutated();\r\n  }\r\n}\r\n\r\nfunction isolateES5Props(proto: any) {\r\n  let stype = (proto.entityType || proto.complexType) as breeze.StructuralType;\r\n  let es5Descriptors = {};\r\n  stype.getProperties().forEach(function (prop) {\r\n    let propDescr = getES5PropDescriptor(proto, prop.name);\r\n    if (propDescr) {\r\n      es5Descriptors[prop.name] = propDescr;\r\n    }\r\n  });\r\n  if (!core.isEmpty(es5Descriptors)) {\r\n    let extra = stype._extra;\r\n    extra.es5Descriptors = es5Descriptors;\r\n    (stype as any)._koDummy = ko.observable(null);\r\n  }\r\n}\r\n\r\n"]}