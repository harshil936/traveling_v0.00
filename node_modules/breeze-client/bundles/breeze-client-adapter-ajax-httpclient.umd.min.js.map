{"version":3,"sources":["ng://breeze-client/adapter-ajax-httpclient/adapter-ajax-httpclient.ts"],"names":["AjaxHttpClientAdapter","http","this","name","adapterName","defaultSettings","register","breezeConfig","config","registerAdapter","initializeAdapterInstance","prototype","initialize","ajax","Error","core","isEmpty","compositeConfig","extend","headers_1","headers","crossDomain","url","params","delim","indexOf","encodeParams","obj","subValue","innerObj","query","name_1","hasOwnProperty","value","Array","i","length","toISOString","encodeURIComponent","Object","subName","undefined","substr","HttpHeaders","has","type","contentType","set","body","data","requestInfo","adapter","request","HttpRequest","toUpperCase","responseType","dsaConfig","success","arg","response","status","httpResponse","getHeaders","makeGetHeaders","statusText","error","HttpResponse","message","errorMessage","isFunction","requestInterceptor","ffilter","filter","map","event","dt","dataType","JSON","parse","fmap","forEach","catch","headerName","getAll","join"],"mappings":"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","sourcesContent":["import { HttpClient, HttpErrorResponse, HttpEvent, HttpHeaders, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { AjaxConfig, config, core, HttpResponse as BreezeHttpResponse, BreezeConfig } from \"breeze-client\";\r\nimport { filter, map } from \"rxjs/operators\";\r\n\r\nexport class AjaxHttpClientAdapter {\r\n  static adapterName = 'httpclient';\r\n  name = AjaxHttpClientAdapter.adapterName;\r\n  defaultSettings = {};\r\n  requestInterceptor: (info: {}) => {};\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  static register(http: HttpClient, breezeConfig?: BreezeConfig) {\r\n    breezeConfig = breezeConfig || config;\r\n    breezeConfig.registerAdapter(\"ajax\", <any>function () { return new AjaxHttpClientAdapter(http); });\r\n    return breezeConfig.initializeAdapterInstance(\"ajax\", AjaxHttpClientAdapter.adapterName, true) as AjaxHttpClientAdapter;\r\n  }\r\n\r\n  initialize() { }\r\n\r\n  ajax(config: AjaxConfig) {\r\n    if (!this.http) {\r\n      throw new Error('Unable to locate angular http module for ajax adapter');\r\n    }\r\n\r\n    // merge default DataSetAdapter Settings with config arg\r\n    if (!core.isEmpty(this.defaultSettings)) {\r\n      let compositeConfig = core.extend({}, this.defaultSettings);\r\n      config = <AjaxConfig>core.extend(compositeConfig, config);\r\n      // extend is shallow; extend headers separately\r\n      let headers = core.extend({}, this.defaultSettings['headers']); // copy default headers 1st\r\n      config['headers'] = core.extend(headers, config.headers);\r\n    }\r\n\r\n    if (config.crossDomain) {\r\n      throw new Error(this.name + ' does not support JSONP (crossDomain) requests');\r\n    }\r\n\r\n    let url = config.url;\r\n    if (!core.isEmpty(config.params)) {\r\n      // Hack: Not sure how Angular handles writing 'search' parameters to the url.\r\n      // so this approach takes over the url param writing completely.\r\n      let delim = (url.indexOf('?') >= 0) ? '&' : '?';\r\n      url = url + delim + encodeParams(config.params);\r\n    }\r\n\r\n    let headers = new HttpHeaders(config.headers || {});\r\n    if (!headers.has('Content-Type')) {\r\n      if (config.type !== 'GET' && config.type !== 'DELETE' && !!config.contentType) {\r\n        headers = headers.set('Content-Type',\r\n          <string>config.contentType || 'application/json; charset=utf-8');\r\n      }\r\n    }\r\n\r\n    let body: any = config.data;\r\n    let request = new HttpRequest((config.type || 'GET').toUpperCase(), url, body, { headers: headers, responseType: \"text\" });\r\n\r\n    let requestInfo = {\r\n      adapter: this,      // this adapter\r\n      request: request,   // the http request from the requestOptions\r\n      dsaConfig: config,  // the config arg from the calling Breeze DataServiceAdapter\r\n      success: successFn, // adapter's success callback\r\n      error: errorFn      // adapter's error callback\r\n    };\r\n\r\n    if (core.isFunction(this.requestInterceptor)) {\r\n      this.requestInterceptor(requestInfo);\r\n      if (this.requestInterceptor['oneTime']) {\r\n        this.requestInterceptor = null;\r\n      }\r\n    }\r\n\r\n    if (requestInfo.request) { // exists unless requestInterceptor killed it.\r\n      const ffilter = filter((response: HttpEvent<any>) => response instanceof HttpResponse);\r\n      const fmap = map(extractData);\r\n\r\n      fmap(ffilter(this.http.request(requestInfo.request)))\r\n        .forEach(requestInfo.success)\r\n        .catch(requestInfo.error);\r\n    }\r\n\r\n    function extractData(event: HttpEvent<any>) {\r\n      let response = event as HttpResponse<any>;\r\n      let data: any;\r\n      let dt = requestInfo.dsaConfig.dataType;\r\n      // beware:`res.json` and `res.text` will be async some day\r\n      if (dt && dt !== 'json') {\r\n        data = response.body;\r\n      } else {\r\n        data = JSON.parse(response.body);\r\n      }\r\n      return { data, response };\r\n    }\r\n\r\n    function successFn(arg: { data: any, response: HttpResponse<any> }) {\r\n      if (arg.response.status < 200 || arg.response.status >= 300) {\r\n        throw { data: arg.data, response: arg.response };\r\n      }\r\n\r\n      let httpResponse: BreezeHttpResponse = {\r\n        config: requestInfo.request,\r\n        data: arg.data,\r\n        getHeaders: makeGetHeaders(arg.response.headers),\r\n        status: arg.response.status\r\n      };\r\n      httpResponse['ngConfig'] = requestInfo.request;\r\n      httpResponse['statusText'] = arg.response.statusText;\r\n      httpResponse['response'] = arg.response;\r\n      config.success(httpResponse);\r\n    }\r\n\r\n    function errorFn(response: HttpErrorResponse) {\r\n      if (response instanceof Error) {\r\n        throw response; // program error; nothing we can do\r\n      } else {\r\n        let data: any;\r\n        if (response.error instanceof HttpResponse) {\r\n          data = response.error.body;\r\n        } else if (response.error instanceof Error) {\r\n          data = response.error.message;\r\n        } else {\r\n          data = response.error;\r\n        }\r\n\r\n        // Timeout appears as an error with status===0 and no data.\r\n        if (response.status === 0 && data == null) {\r\n          data = 'timeout';\r\n        }\r\n\r\n        let errorMessage = response.status + \": \" + response.statusText;\r\n        if (data && typeof data === 'object') {\r\n          data[\"message\"] = data[\"message\"] || errorMessage;  // breeze looks at the message property\r\n        }\r\n        if (!data) {\r\n          data = errorMessage;   // Return the error message as data\r\n        }\r\n        let httpResponse: BreezeHttpResponse = {\r\n          config: requestInfo.request,\r\n          data: data,\r\n          getHeaders: makeGetHeaders(response.headers),\r\n          status: response.status\r\n        };\r\n        httpResponse['ngConfig'] = requestInfo.request;\r\n        httpResponse['statusText'] = response.statusText;\r\n        httpResponse['response'] = response;\r\n\r\n        config.error(httpResponse); // send error to breeze error handler\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n///// Helpers ////\r\n\r\nfunction encodeParams(obj: {}) {\r\n  let query = '';\r\n  let subValue: any, innerObj: any, fullSubName: any;\r\n\r\n  for (let name in obj) {\r\n    if (!obj.hasOwnProperty(name)) { continue; }\r\n\r\n    let value = obj[name];\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; ++i) {\r\n        subValue = value[i];\r\n        fullSubName = name + '[' + i + ']';\r\n        innerObj = {};\r\n        innerObj[fullSubName] = subValue;\r\n        query += encodeParams(innerObj) + '&';\r\n      }\r\n    } else if (value && value.toISOString) { // a feature of Date-like things\r\n      query += encodeURIComponent(name) + '=' + encodeURIComponent(value.toISOString()) + '&';\r\n    } else if (value instanceof Object) {\r\n      for (let subName in value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n          subValue = value[subName];\r\n          fullSubName = name + '[' + subName + ']';\r\n          innerObj = {};\r\n          innerObj[fullSubName] = subValue;\r\n          query += encodeParams(innerObj) + '&';\r\n        }\r\n      }\r\n    } else if (value === null) {\r\n      query += encodeURIComponent(name) + '=&';\r\n    } else if (value !== undefined) {\r\n      query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n    }\r\n  }\r\n\r\n  return query.length ? query.substr(0, query.length - 1) : query;\r\n}\r\n\r\nfunction makeGetHeaders(headers: HttpHeaders) {\r\n  return function getHeaders(headerName?: string) { return headers.getAll(headerName).join('\\r\\n'); };\r\n}"]}