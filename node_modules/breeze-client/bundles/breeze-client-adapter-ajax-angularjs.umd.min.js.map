{"version":3,"sources":["ng://breeze-client/adapter-ajax-angularjs/adapter-ajax-angularjs.ts"],"names":["core","breeze.core","AjaxAngularjsAdapter","this","name","defaultSettings","requestInterceptor","undefined","register","config","breeze.config","registerAdapter","initializeAdapterInstance","prototype","initialize","http_1","rootScope_1","ng","requireLib","injector","invoke","$http","$rootScope","setHttp","http","ajax","Error","ngConfig","method","type","url","dataType","contentType","crossDomain","headers","data","params","delim","indexOf","encodeParams","obj","subValue","innerObj","query","name_1","value","Array","i","length","toISOString","encodeURIComponent","Object","subName","substr","isEmpty","compositeConfig","extend","requestInfo","adapter","dsaConfig","success","successFn","error","errorFn","responseSuccess","response","status","statusText","responseError","isFunction","ri","oneTime","prom","then","catch","$digest","xconfig","httpResponse","getHeaders"],"mappings":"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","sourcesContent":["import * as breeze from 'breeze-client';\r\n\r\nlet core = breeze.core;\r\n\r\nexport class AjaxAngularjsAdapter implements breeze.AjaxAdapter {\r\n  name: string;\r\n  defaultSettings: { headers?: any };\r\n  requestInterceptor?: (() => breeze.ChangeRequestInterceptor) | breeze.ChangeRequestInterceptor;\r\n  $http: any;\r\n  $rootScope: any;\r\n  constructor() {\r\n    this.name = \"angularjs\";\r\n    this.defaultSettings = {};\r\n    this.requestInterceptor = undefined;\r\n    // Will set:\r\n    //   this.$http;\r\n    //   this.$rootScope;\r\n  }\r\n\r\n  static register(config?: breeze.BreezeConfig) {\r\n    config = config || breeze.config;\r\n    config.registerAdapter(\"ajax\", AjaxAngularjsAdapter);\r\n    return config.initializeAdapterInstance(\"ajax\", \"angularjs\", true) as AjaxAngularjsAdapter;\r\n  }\r\n\r\n  initialize() {\r\n\r\n    let ng = breeze.core.requireLib(\"angular\");\r\n    if (ng) {\r\n      let $injector = ng.injector(['ng']);\r\n      let http: any, rootScope: any;\r\n      $injector.invoke(['$http', '$rootScope', function ($http: any, $rootScope: any) {\r\n        http = $http;\r\n        rootScope = $rootScope;\r\n      }]);\r\n      this.$http = http;\r\n      this.$rootScope = rootScope;\r\n    }\r\n\r\n  }\r\n\r\n  setHttp(http: any) {\r\n    this.$http = http;\r\n    this.$rootScope = null; // to suppress $rootScope.digest\r\n  }\r\n\r\n\r\n  ajax(config: any) {\r\n    if (!this.$http) {\r\n      throw new Error(\"Unable to locate angularjs for ajax adapter\");\r\n    }\r\n    let ngConfig = {\r\n      method: config.type,\r\n      url: config.url,\r\n      dataType: config.dataType,\r\n      contentType: config.contentType,\r\n      crossDomain: config.crossDomain,\r\n      headers: config.headers || {},\r\n      data: undefined as any\r\n    };\r\n\r\n    if (config.params) {\r\n      // Hack: because of the way that Angular handles writing parameters out to the url.\r\n      // so this approach takes over the url param writing completely.\r\n      // See: http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/\r\n      let delim = (ngConfig.url.indexOf(\"?\") >= 0) ? \"&\" : \"?\";\r\n      ngConfig.url = ngConfig.url + delim + encodeParams(config.params);\r\n    }\r\n\r\n    if (config.data) {\r\n      ngConfig.data = config.data;\r\n    }\r\n\r\n    if (!core.isEmpty(this.defaultSettings)) {\r\n      let compositeConfig = core.extend({}, this.defaultSettings);\r\n      ngConfig = core.extend(compositeConfig, ngConfig) as any;\r\n      // extend is shallow; extend headers separately\r\n      let headers = core.extend({}, this.defaultSettings.headers); // copy default headers 1st\r\n      ngConfig.headers = core.extend(headers, ngConfig.headers);\r\n    }\r\n\r\n    let requestInfo = {\r\n      adapter: this,      // this adapter\r\n      config: ngConfig,   // angular's $http configuration object\r\n      dsaConfig: config,  // the config arg from the calling Breeze DataServiceAdapter\r\n      success: successFn, // adapter's success callback\r\n      error: errorFn,      // adapter's error callback\r\n      responseSuccess: responseSuccessFn, // adapter's success callback (ng 1.6+)\r\n      responseError: responseErrorFn      // adapter's error callback (ng 1.6+)\r\n    };\r\n\r\n    if (core.isFunction(this.requestInterceptor)) {\r\n      let ri = this.requestInterceptor as any;\r\n      ri(requestInfo);\r\n      if (ri.oneTime) {\r\n        this.requestInterceptor = undefined;\r\n      }\r\n    }\r\n\r\n    if (requestInfo.config) { // exists unless requestInterceptor killed it.\r\n      let prom = this.$http(requestInfo.config);\r\n      if (prom.success) {\r\n        // response for ng < 1.6        \r\n        prom.success(requestInfo.success).error(requestInfo.error);\r\n      } else {\r\n        // response for ng 1.6+\r\n        prom.then(requestInfo.responseSuccess).catch(requestInfo.responseError);\r\n      }\r\n      this.$rootScope && this.$rootScope.$digest();\r\n    }\r\n\r\n    function responseSuccessFn(response: any) {\r\n      return successFn(response.data, response.status, response.headers, response.config, response.statusText);\r\n    }\r\n\r\n    function successFn(data: any, status: any, headers: any, xconfig: any, statusText: string) {\r\n      // HACK: because $http returns a server side null as a string containing \"null\" - this is WRONG.\r\n      if (data === \"null\") data = null;\r\n      let httpResponse = {\r\n        config: config,\r\n        data: data,\r\n        getHeaders: headers,\r\n        ngConfig: xconfig,\r\n        status: status,\r\n        statusText: statusText\r\n      };\r\n      config.success(httpResponse);\r\n    }\r\n\r\n    function responseErrorFn(response: any) {\r\n      return errorFn(response.data, response.status, response.headers, response.config, response.statusText);\r\n    }\r\n\r\n    function errorFn(data: any, status: any, headers: any, xconfig: any, statusText: string) {\r\n      // Timeout appears as an error with status===0 and no data.\r\n      // Make it better\r\n      if (status === 0 && data == null) {\r\n        data = 'timeout';\r\n      }\r\n      let httpResponse = {\r\n        config: config,\r\n        data: data,\r\n        getHeaders: headers,\r\n        ngConfig: xconfig,\r\n        status: status,\r\n        statusText: statusText\r\n      };\r\n      config.error(httpResponse);\r\n    }\r\n  }\r\n}\r\n\r\nbreeze.config.registerAdapter(\"ajax\", AjaxAngularjsAdapter);\r\n\r\nfunction encodeParams(obj: Object) {\r\n  let query = '';\r\n  let subValue: any, innerObj: Object, fullSubName: string;\r\n\r\n  for (let name in obj) {\r\n    let value = obj[name];\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; ++i) {\r\n        subValue = value[i];\r\n        fullSubName = name + '[' + i + ']';\r\n        innerObj = {};\r\n        innerObj[fullSubName] = subValue;\r\n        query += encodeParams(innerObj) + '&';\r\n      }\r\n    } else if (value && value.toISOString) { // a feature of Date-like things\r\n      query += encodeURIComponent(name) + '=' + encodeURIComponent(value.toISOString()) + '&';\r\n    } else if (value instanceof Object) {\r\n      for (let subName in value) {\r\n        subValue = value[subName];\r\n        fullSubName = name + '[' + subName + ']';\r\n        innerObj = {};\r\n        innerObj[fullSubName] = subValue;\r\n        query += encodeParams(innerObj) + '&';\r\n      }\r\n    } else if (value === null) {\r\n      query += encodeURIComponent(name) + '=&';\r\n    } else if (value !== undefined) {\r\n      query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n    }\r\n  }\r\n\r\n  return query.length ? query.substr(0, query.length - 1) : query;\r\n}"]}