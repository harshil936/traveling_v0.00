{"version":3,"file":"breeze-client-adapter-uri-builder-odata.umd.js","sources":["ng://breeze-client/adapter-uri-builder-odata/adapter-uri-builder-odata.ts"],"sourcesContent":["import * as breeze from 'breeze-client';\r\n\r\nexport class UriBuilderODataAdapter implements breeze.UriBuilderAdapter {\r\n\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.name = \"odata\";\r\n  }\r\n\r\n  static register(config?: breeze.BreezeConfig) {\r\n    config = config || breeze.config;\r\n    config.registerAdapter(\"uriBuilder\", UriBuilderODataAdapter);\r\n    return config.initializeAdapterInstance(\"uriBuilder\", \"odata\", true) as UriBuilderODataAdapter;\r\n  }\r\n\r\n  initialize() { }\r\n\r\n  buildUri(entityQuery: breeze.EntityQuery, metadataStore: breeze.MetadataStore) {\r\n    // force entityType validation;\r\n    let entityType = entityQuery._getFromEntityType(metadataStore, false);\r\n    if (!entityType) {\r\n      // anonymous type but still has naming convention info avail\r\n      entityType = new breeze.EntityType(metadataStore);\r\n    }\r\n\r\n    let queryOptions = {};\r\n    queryOptions[\"$filter\"] = toWhereODataFragment(entityQuery.wherePredicate);\r\n    queryOptions[\"$orderby\"] = toOrderByODataFragment(entityQuery.orderByClause!);\r\n\r\n    if (entityQuery.skipCount) {\r\n      queryOptions[\"$skip\"] = entityQuery.skipCount;\r\n    }\r\n\r\n    if (entityQuery.takeCount != null) {\r\n      queryOptions[\"$top\"] = entityQuery.takeCount;\r\n    }\r\n\r\n    queryOptions[\"$expand\"] = toExpandODataFragment(entityQuery.expandClause);\r\n    queryOptions[\"$select\"] = toSelectODataFragment(entityQuery.selectClause!);\r\n\r\n    if (entityQuery.inlineCountEnabled) {\r\n      queryOptions[\"$inlinecount\"] = \"allpages\";\r\n    }\r\n\r\n    let qoText = toQueryOptionsString(queryOptions as breeze.QueryOptions);\r\n    let sep = entityQuery.resourceName.includes(\"?\") ? \"&\" : \"?\";\r\n    return entityQuery.resourceName + sep + qoText;\r\n\r\n    // private methods to this func.\r\n\r\n    function toWhereODataFragment(wherePredicate: breeze.Predicate) {\r\n      if (!wherePredicate) return undefined;\r\n      // validation occurs inside of the toODataFragment call here.\r\n      let frag = wherePredicate.visit({ entityType: entityType }, toODataFragmentVisitor);\r\n      return (frag && frag.length > 0) ? frag : undefined;\r\n    }\r\n\r\n    function toOrderByODataFragment(orderByClause: breeze.OrderByClause) {\r\n      if (!orderByClause) return undefined;\r\n      orderByClause.validate(entityType!);\r\n      let strings = orderByClause.items.map(function (item) {\r\n        return entityType!.clientPropertyPathToServer(item.propertyPath, \"/\") + (item.isDesc ? \" desc\" : \"\");\r\n      });\r\n      // should return something like CompanyName,Address/City desc\r\n      return strings.join(',');\r\n    }\r\n\r\n    function toSelectODataFragment(selectClause?: breeze.SelectClause) {\r\n      if (!selectClause) return undefined;\r\n      selectClause.validate(entityType!);\r\n      let frag = selectClause.propertyPaths.map(function (pp) {\r\n        return entityType!.clientPropertyPathToServer(pp, \"/\");\r\n      }).join(\",\");\r\n      return frag;\r\n    }\r\n\r\n    function toExpandODataFragment(expandClause?: breeze.ExpandClause) {\r\n      if (!expandClause) return undefined;\r\n      // no validate on expand clauses currently.\r\n      // expandClause.validate(entityType);\r\n      let frag = expandClause.propertyPaths.map(function (pp) {\r\n        return entityType!.clientPropertyPathToServer(pp, \"/\");\r\n      }).join(\",\");\r\n      return frag;\r\n    }\r\n\r\n    function toQueryOptionsString(queryOptions: breeze.QueryOptions) {\r\n      let qoStrings: string[] = [];\r\n      for (let qoName in queryOptions) {\r\n        let qoValue = queryOptions[qoName];\r\n        if (qoValue !== undefined) {\r\n          if (qoValue instanceof Array) {\r\n            qoValue.forEach(function (qov) {\r\n              qoStrings.push(qoName + \"=\" + encodeURIComponent(qov));\r\n            });\r\n          } else {\r\n            qoStrings.push(qoName + \"=\" + encodeURIComponent(qoValue));\r\n          }\r\n        }\r\n      }\r\n\r\n      if (qoStrings.length > 0) {\r\n        return qoStrings.join(\"&\");\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n(breeze.Predicate.prototype as any).toODataFragment = function (context: breeze.VisitContext) {\r\n  return this.visit(context, toODataFragmentVisitor);\r\n};\r\n\r\nlet toODataFragmentVisitor = {\r\n\r\n  passthruPredicate: function () {\r\n    return this.value;\r\n  },\r\n\r\n  unaryPredicate: function (this: breeze.UnaryPredicate, context: breeze.VisitContext) {\r\n    let predVal = this.pred.visit(context);\r\n    return odataOpFrom(this) + \" \" + \"(\" + predVal + \")\";\r\n  },\r\n\r\n  binaryPredicate: function (this: breeze.BinaryPredicate, context: breeze.VisitContext) {\r\n    let expr1Val = this.expr1!.visit(context);\r\n    let expr2Val = this.expr2!.visit(context);\r\n    let prefix = (context as any).prefix;\r\n    if (prefix) {\r\n      expr1Val = prefix + \"/\" + expr1Val;\r\n    }\r\n\r\n    let odataOp = odataOpFrom(this);\r\n\r\n    if (this.op.key === 'in') {\r\n      let result = expr2Val.map(function (v: any) {\r\n        return \"(\" + expr1Val + \" eq \" + v + \")\";\r\n      }).join(\" or \");\r\n      return result;\r\n    } else if (this.op.isFunction) {\r\n      if (odataOp === \"substringof\") {\r\n        return odataOp + \"(\" + expr2Val + \",\" + expr1Val + \") eq true\";\r\n      } else {\r\n        return odataOp + \"(\" + expr1Val + \",\" + expr2Val + \") eq true\";\r\n      }\r\n    } else {\r\n      return expr1Val + \" \" + odataOp + \" \" + expr2Val;\r\n    }\r\n  },\r\n\r\n  andOrPredicate: function (this: breeze.AndOrPredicate, context: breeze.VisitContext) {\r\n    let result = this.preds.map(function (pred) {\r\n      let predVal = pred.visit(context);\r\n      return \"(\" + predVal + \")\";\r\n    }).join(\" \" + odataOpFrom(this) + \" \");\r\n    return result;\r\n  },\r\n\r\n  anyAllPredicate: function (this: breeze.AnyAllPredicate, context: breeze.VisitContext) {\r\n    let exprVal = this.expr.visit(context);\r\n    if (!this.pred.op) { // added 21-Oct-2016 to fix breeze.js issue #172\r\n      return exprVal + \"/\" + odataOpFrom(this) + \"()\";\r\n    }\r\n    let prefix = (context as any).prefix;\r\n    if (prefix) {\r\n      exprVal = prefix + \"/\" + exprVal;\r\n      prefix = \"x\" + (parseInt(prefix.substring(1)) + 1);\r\n    } else {\r\n      prefix = \"x1\";\r\n    }\r\n    // need to create a new context because of 'prefix'\r\n    let newContext = breeze.core.extend({}, context) as any;\r\n    newContext.entityType = this.expr.dataType;\r\n    newContext.prefix = prefix;\r\n    let newPredVal = this.pred.visit(newContext);\r\n    return exprVal + \"/\" + odataOpFrom(this) + \"(\" + prefix + \": \" + newPredVal + \")\";\r\n  },\r\n\r\n  litExpr: function () {\r\n    if (Array.isArray(this.value)) {\r\n      return this.value.map(function (v: any) { return this.dataType.fmtOData(v); }, this);\r\n    } else {\r\n      return this.dataType.fmtOData(this.value);\r\n    }\r\n  },\r\n\r\n  propExpr: function (this: breeze.PropExpr, context: breeze.ExpressionContext) {\r\n    let entityType = context.entityType;\r\n    // '/' is the OData path delimiter\r\n    return entityType ? entityType.clientPropertyPathToServer(this.propertyPath, \"/\") : this.propertyPath;\r\n  },\r\n\r\n  fnExpr: function (this: breeze.FnExpr, context: breeze.ExpressionContext) {\r\n    let exprVals = this.exprs.map(function (expr) {\r\n      return expr.visit(context);\r\n    });\r\n    return this.fnName + \"(\" + exprVals.join(\",\") + \")\";\r\n  }\r\n};\r\n\r\nlet _operatorMap = {\r\n  'contains': 'substringof'\r\n};\r\n\r\nfunction odataOpFrom(node: any) {\r\n  let op = node.op.key;\r\n  let odataOp = _operatorMap[op];\r\n  return odataOp || op;\r\n}\r\n\r\nbreeze.config.registerAdapter(\"uriBuilder\", UriBuilderODataAdapter);\r\n\r\n\r\n\r\n"],"names":["config","breeze.config","breeze.EntityType","breeze.Predicate","breeze.core"],"mappings":"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"}