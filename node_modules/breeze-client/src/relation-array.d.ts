import { ObservableArray } from './observable-array';
import { Entity } from './entity-aspect';
import { DataProperty, NavigationProperty } from './entity-metadata';
import { QuerySuccessCallback, QueryErrorCallback, QueryResult } from './entity-manager';
export interface RelationArray extends ObservableArray {
    [index: number]: Entity;
    parentEntity: Entity;
    parentProperty?: DataProperty;
    navigationProperty: NavigationProperty;
    _inProgress?: boolean;
    _addsInProcess: Entity[];
    load(querySuccessCallback?: QuerySuccessCallback, queryErrorCallback?: QueryErrorCallback): Promise<QueryResult>;
}
/** For use by breeze plugin authors only. The class is for use in building a [[IModelLibraryAdapter]] implementation.
@adapter (see [[IModelLibraryAdapter]])
@hidden
*/
export declare function makeRelationArray(arr: any[], parentEntity: Entity, navigationProperty: NavigationProperty): RelationArray;
